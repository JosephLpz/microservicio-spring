# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- 'feature-ms-josephlopez-Finaliza-el-curso-DevOps-foundation-v3-josephlopez'

pool: 'Default'

steps:
- script: chmod +x gradlew 
- task: Gradle@3
  inputs:
    gradleWrapperFile: 'gradlew'
    tasks: 'build jacocoTestReport'
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml'
    javaHomeOption: 'JDKVersion'
    sonarQubeRunAnalysis: false
    spotBugsAnalysis: false
  displayName: 'Compilacion'

- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: 'JaCoCo'
    summaryFileLocation: '$(Build.SourcesDirectory)/build/reports/jacoco/test/jacocoTestReport.xml'
    reportDirectory: '$(Build.SourcesDirectory)\build\reports\jacoco\test\html'

- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'SonarCloud'
    organization: 'microservicio-spring-key'
    projectKey: 'JosephLpz_microservicio-spring'
    projectName: 'microservicio-spring'
    projectVersion: '2.6.0'
  displayName: 'SonarCloud Analysis'

- task: Gradle@3
  inputs:
    gradleWrapperFile: 'gradlew'
    tasks: 'sonarqube'
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml'
    javaHomeOption: 'JDKVersion'
    sonarQubeRunAnalysis: true
    sqGradlePluginVersionChoice: 'specify'
    sonarQubeGradlePluginVersion: '3.3'
    spotBugsAnalysis: false
  displayName: 'SonarQube Analysis'

- task: Docker@2
  inputs:
    containerRegistry: 'devops-fundation-test-docker'
    repository: 'josephlpz/microservicio-spring'
    command: 'build'
    Dockerfile: '**/Dockerfile'
    tags: 'latest'
  displayName: 'build docker'

- task: Docker@2
  inputs:
    containerRegistry: 'devops-fundation-test-docker'
    repository: 'josephlpz/microservicio-spring'
    command: 'push'
    tags: 'latest'
  displayName: 'push docker'

- task: Kubernetes@1
  inputs:
    connectionType: 'None'
    namespace: 'default'
    command: 'apply'
    arguments: '-f deployment-app.yaml'
  displayName: 'kubernetes deploy'

